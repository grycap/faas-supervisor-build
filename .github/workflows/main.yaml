name: build

on:
  push:
    branches: [main]
  release:
    types: [created]

jobs:
  build-ubuntu16:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Prepare
      id: prepare
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        TAGS="--tag ghcr.io/grycap/faas-supervisor-build:ubuntu16.04-latest"
        if [[ ! -z "$VERSION" ]]; then
          TAGS="$TAGS --tag ghcr.io/grycap/faas-supervisor-build:ubuntu16.04-${VERSION}"
        fi
        echo ::set-output name=buildx_args::--platform "linux/amd64,linux/arm64" \
          ${TAGS} ubuntu16.04
    - name: GHCR login
      env:
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_PASSWORD: ${{ secrets.GHCR_PASSWORD }}
      run: echo "${GHCR_PASSWORD}" | docker login ghcr.io --username "${GHCR_USERNAME}" --password-stdin
    - name: Build and Push
      run: docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
    - name: Clear
      if: always()
      run: rm -f ${HOME}/.docker/config.json

  build-alpine:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Prepare
      id: prepare
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        TAGS="--tag ghcr.io/grycap/faas-supervisor-build:alpine-latest"
        if [[ ! -z "$VERSION" ]]; then
          TAGS="$TAGS --tag ghcr.io/grycap/faas-supervisor-build:alpine-${VERSION}"
        fi
        echo ::set-output name=buildx_args::--platform "linux/amd64,linux/arm64" \
          ${TAGS} alpine
    - name: GHCR login
      env:
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_PASSWORD: ${{ secrets.GHCR_PASSWORD }}
      run: echo "${GHCR_PASSWORD}" | docker login ghcr.io --username "${GHCR_USERNAME}" --password-stdin
    - name: Build and Push
      run: docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}
    - name: Clear
      if: always()
      run: rm -f ${HOME}/.docker/config.json


